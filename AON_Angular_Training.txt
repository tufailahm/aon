Postman	

Angular ??
HTML, CSS, JS

Typescript - subset of javascript
SPA


Angular JS

Angular JS 1.5

Angular 2	- Typescript

4,5,6 

16

tsconfig.json
strict : true



any:name



var and any





name: string = "Ahmed"
address : any = 19;
var 

first.TS

function greeter(person) {
    return "Hello, " + person;
}
var user = "Welcome , Tufail";
document.body.innerHTML = greeter(user);


tsc first.ts


first.HTML

<html>
    <head><title>TypeScript Greeter</title></head>
    <body>
        <script src="First.js"></script>
    </body>
</html>


Open first.html in browser


https://github.com/tufailahm/aon


====================================================


Angular

==========
npm install -g @angular-cli

ng new product-aon-app

-------------------

Data binding
{{ 	}}


Angular CLI
==================

ng generate component manager

ng generate component components/manager

-- 
ng g c components/manager

 ng g c components/employee


Property binding	[ 	]
Event binding	(	)
Interpolation	{{	}}
Data Binding	-{{title}}


		
======================
node  - install


npm 


npm install -g @angular-cli



Npm basics 


ng new 
Webpack

package.json
tsconfig.json






NgStyle :

people.ts

export interface People {
    name: string,
    country: string
}


---------https://github.com/tufailahm/aon

  //people complex object
  people: People[] = [
    {
      "name": "Tufail Ahmed",
      "country": 'IN'
    },
    {
      "name": "Neha Sharma",
      "country": 'UK'
    },
    {
      "name": "Ravi Kiran",
      "country": 'IN'
    },
    {
      "name": "Tarun Sharma",
      "country": 'IN'
    },
    {
      "name": "Cook Tyson",
      "country": 'USA'
    }
  ];

}

-  

getColor(country:any) {
    switch (country) {
      case 'UK':
        return 'green';
      case 'USA':
        return 'blue';
      case 'IN':
        return 'red';
      default :
        return 'yellow';
    }
  }

===============

<h4>NgStyle</h4>
<ul *ngFor="let person of people">
    <li [ngStyle]="{'color':getColor(person.country)}"> {{ person.name }} ({{ person.country }})
    </li>
</ul>




Hands on
===========

a) Create product.ts with the following property (create class and not an interface)

productId
productName
quantityOnHand
price

Solution :

export class Product
{
    productId! : number;
    productName! : string;
    quantityOnHand! : number;
    price! : number;
}


b) Create a new component productList and list all the information
Solution : ng g c components/productList


c) create an array to add three product information.

Solution : 
products: Product[] = [
    {
      "productId": 1,
      "productName": "Lakme",
      "quantityOnHand": 199,
      "price": 200
    },

    {
      "productId": 2,
      "productName": "Mouse",
      "quantityOnHand": 299,
      "price": 2300
    },

    {
      "productId": 3,
      "productName": "Laptop",
      "quantityOnHand": 300,
      "price": 98000
    }
  ]

d) Display the information like this : 
Product Id 	Product name	QuantityOnHand		Price
1 		Lakme 		199 			200
2 		Mouse 		200 			900
3		Laptop		300 			400


Solution :

<ul>
    <li *ngFor="let product of products">
            {{ product.productId}}  -
            {{ product.productName}} -
            {{ product.quantityOnHand}}
            {{ product.price}}
    </li>
</ul>


========================================================

Lifecycle


====

class Hello
{
	int i=100;
	
	const()		???
	{
	}
}




ngOnInit()
ngOnChanges
ngOnDestroy()


====================================
Services




















Problem : 
new object is getting created 
scarcity of the resources
ultimately impact the performance
violationg SRP principle


Dependency Injection- spring

angular services

Hands on --- Services

Create a service known as CurrencyConvertor in which create a method to accept two currency numbers and


currencyValue(90,)
{
	
}

Create a component to accept and renders the output 


currencyValue(currencyValue:number,currencyType:string)
{
	// REST API 
	currencyRate = 1
	if (INR then name
	if any other multiplied by 3
}
Expected output : The value of 500 in INR is : 500

 The value of 500 in US is : 1500



20 minutes




http://localhost:4200/assets/productData.json


https://jsonplaceholder.typicode.com/todos

==============================================

json-server 	- fake rest api generator


npm install -g json-server

H:\aondemos>json-server --watch productdb.json --id productId


Routing
================


Programmatic routing 
Routing Parameters
================



productDetail/productSummary/pid


productDetail/productSummary/19171

productDetail/productSummary/neha

productDetail/productSummary/pune

productDetail/productSummary/pid		




Hands on :


In about us component , specify some emergency phone numbers as :

Emergency Numbers 
123   -- Details
456   -- Details
789   -- Details
987   -- Details


EmergencyDetailComponent

Clicking on details beside the number should display full details about the numbers

like 


123	belongs to fire
987	belongs to ambulance
789	belongs to earthquake
456	belongs to theft























